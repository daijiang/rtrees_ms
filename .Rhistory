rmarkdown::render("Doc/respond_to_reviewer.Rmd")
library(tidyverse)
d = read_csv("~/Downloads/ECOG-04434/Appendix_3-Example_species_list.csv")$genus
d = read_csv("~/Downloads/ECOG-04434/Appendix_3-Example_species_list.csv")[, 1:3]
d
microbenchmark::microbenchmark(
t_vphylo <- V.PhyloMaker2::phylo.maker(sp.list = d)
t_rtrees <- rtrees::get_tree(sp_list = d, taxon = "plant"),
times = 10
)
microbenchmark::microbenchmark(
t_vphylo <- V.PhyloMaker2::phylo.maker(sp.list = d),
t_rtrees <- rtrees::get_tree(sp_list = d, taxon = "plant"),
times = 10
)
library(V.PhyloMaker2)
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = d),
t_rtrees <- rtrees::get_tree(sp_list = d, taxon = "plant"),
times = 10
)
t_vphylo
par(mfrow = c(1,2))
plot(ape::ladderize(t_vphylo))
plot(ape::ladderize(t_vphylo$scenario.3))
plot(ape::ladderize(t_rtrees))
d = read_csv("~/Downloads/ECOG-04434/Appendix_3-Example_species_list.csv")
t_vphylo <- phylo.maker(sp.list = d)
d2 = set_names(d, c("species", "genus", "family", "close_sp", "close_genus"))
t_rtrees <- rtrees::get_tree(sp_list = d2, taxon = "plant")
plot(ape::ladderize(t_vphylo$scenario.3))
plot(ape::ladderize(t_rtrees))
View(d)
t_rtrees <- rtrees::get_tree(sp_list = d2, taxon = "plant", show_grafted = T)
plot(ape::ladderize(t_vphylo$scenario.3))
plot(ape::ladderize(t_rtrees))
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/")
d
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/", col_names = F)
d
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/", col_names = F) %>%
set_names(c("family", "genus", "species")) %>%
mutate(genus = str_extract(genus, "^[^_]+")) %>%
select(species, genus, family)
d
n_distinct(d$species)
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/", col_names = F) %>%
set_names(c("family", "genus", "species")) %>%
mutate(genus = str_extract(genus, "^[^_]+")) %>%
select(species, genus, family) %>% distinct()
n_distinct(d$species)
d
sp_missing = setdiff(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
V.PhyloMaker2::GBOTB.extended.TPL$tip.label
d$species
sp_missing = setdiff(d$species, megatrees::tree_plant_otl$tip.label)
sp_missing
d
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/", col_names = F) %>%
set_names(c("family", "genus", "species")) %>%
mutate(genus = str_extract(genus, "^[^_]+"),
species = rtrees:::cap_first_letter(species)) %>%
select(species, genus, family) %>% distinct()
n_distinct(d$species)
sp_missing = setdiff(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
sp_missing = setdiff(d$species, megatrees::tree_plant_otl$tip.label)
sp_missing = setdiff(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
sp_missing = setdiff(d$species, megatrees::tree_plant_otl$tip.label)
sp_in = intersect(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 500))
test_sp_df = filter(d, species %in% test_sp)
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = test_sp_df),
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"),
times = 2
)
t_rtrees
t_vphylo
test_sp_df
test_sp_df = filter(d, species %in% sp_missing)
test_sp_df
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/", col_names = F) %>%
set_names(c("family", "genus", "species")) %>%
mutate(genus = str_extract(genus, "^[^_]+"),
species = rtrees:::cap_first_letter(species),
genus = rtrees:::cap_first_letter(genus),
family = rtrees:::cap_first_letter(family)) %>%
select(species, genus, family) %>% distinct()
n_distinct(d$species)
sp_missing = setdiff(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
sp_missing = setdiff(d$species, megatrees::tree_plant_otl$tip.label)
sp_in = intersect(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 500))
test_sp_df = filter(d, species %in% test_sp)
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = test_sp_df),
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"),
times = 2
)
V.PhyloMaker2::tips.info.TPL
head(V.PhyloMaker2::tips.info.TPL)
c_vphylo = unique(select(V.PhyloMaker2::tips.info.TPL, genus, family))
c_vphylo
c_vphylo = as_tibble(unique(select(V.PhyloMaker2::tips.info.TPL, genus, family)))
c_vphylo
filter(rtrees::classifications, taxon == "plant")
table(V.PhyloMaker2::tips.info.TPL$group)
c_rtrees = filter(rtrees::classifications, taxon == "plant")
filter(rtrees::classifications, taxon == "plant")
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/", col_names = F) %>%
set_names(c("family", "genus", "species")) %>%
mutate(genus = str_extract(genus, "^[^_]+"),
species = rtrees:::cap_first_letter(species),
genus = rtrees:::cap_first_letter(genus),
family = rtrees:::cap_first_letter(family)) %>%
select(species) %>% distinct()
n_distinct(d$species)
sp_missing = setdiff(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
sp_missing = setdiff(d$species, megatrees::tree_plant_otl$tip.label)
sp_in = intersect(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 500))
test_sp_df = rtrees::sp_list_df(sp_list = test_sp, taxon = "plant")
test_sp_df
View(test_sp_df)
test_sp_df = filter(test_sp_df, !is.na(family))
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant")
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = test_sp_df),
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"),
times = 2
)
remotes::install_github("daijiang/rtrees")
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 1000))
test_sp_df = rtrees::sp_list_df(sp_list = test_sp, taxon = "plant")
test_sp_df = filter(test_sp_df, !is.na(family))
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = test_sp_df),
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"),
times = 2
)
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 2000))
test_sp_df = rtrees::sp_list_df(sp_list = test_sp, taxon = "plant")
test_sp_df = filter(test_sp_df, !is.na(family))
test_sp
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = test_sp_df),
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"),
times = 2
)
profvis::profvis(t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"))
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 3000))
test_sp_df = rtrees::sp_list_df(sp_list = test_sp, taxon = "plant")
test_sp_df = filter(test_sp_df, !is.na(family))
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = test_sp_df),
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"),
times = 2
)
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 500))
test_sp_df = rtrees::sp_list_df(sp_list = test_sp, taxon = "plant")
test_sp_df = filter(test_sp_df, !is.na(family))
profvis::profvis(t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"))
rtrees::get_one_tree
devtools::install_github("crsh/citr")
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
library(rtrees)
rtrees::taxa_supported
sapply(rtrees::taxa_supported, function(x){
dplyr::n_distinct(dplyr::filter(rtrees::classifications, taxon == x)$genus)
})
n_genus = sapply(rtrees::taxa_supported, function(x){
dplyr::n_distinct(dplyr::filter(rtrees::classifications, taxon == x)$genus)
})
n_genus
as.data.frame(n_genus)
t(as.data.frame(n_genus))
n_genus = t(as.data.frame(n_genus))
str(n_genus)
n_genus = sapply(rtrees::taxa_supported, function(x){
dplyr::n_distinct(dplyr::filter(rtrees::classifications, taxon == x)$genus)
})
n_genus
packageVersion("rtrees")
paste0('v', packageVersion("rtrees"))
n_genus["plant"]
format(n_genus["plant"], big.mark = ",")
paste0('v', packageVersion("rtrees"))
format(n_genus["plant"], big.mark = ",")
format(n_genus["bird"], big.mark = ",")
format(n_genus["fish"], big.mark = ",")
format(n_genus["mammal"], big.mark = ",")
format(n_genus["amphibian"], big.mark = ",")
format(n_genus["reptile"], big.mark = ",")
format(n_genus["shark_ray"], big.mark = ",")
n_genus
sort(n_genus)
ape::Ntip(tree_amphibian_n100)
library(rtrees)
ape::Ntip(tree_amphibian_n100)
ape::Ntip(megatrees::tree_amphibian_n100)
ape::Ntip(megatrees::tree_amphibian_n100[[1]])
format(ape::Ntip(megatrees::tree_amphibian_n100[[1]]), big.mark = ",")
data.frame(
Taxon = c("Amphibian", "Bird", "Fish", "", "Mammal", "", "Plant", "Reptile (Squamate)", "Shark, Ray, and Chimaera"),
`# of species` = c(format(ape::Ntip(megatrees::tree_amphibian_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_bird_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_12k), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_32k_n50[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_phylacine[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_vertlife[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_plant_otl), big.mark = ","),
format(ape::Ntip(megatrees::tree_reptile_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_shark_ray_n100[[1]]), big.mark = ","))
)
tibble::tibble(
Taxon = c("Amphibian", "Bird", "Fish", "", "Mammal", "", "Plant", "Reptile (Squamate)", "Shark, Ray, and Chimaera"),
`# of species` = c(format(ape::Ntip(megatrees::tree_amphibian_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_bird_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_12k), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_32k_n50[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_phylacine[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_vertlife[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_plant_otl), big.mark = ","),
format(ape::Ntip(megatrees::tree_reptile_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_shark_ray_n100[[1]]), big.mark = ","))
)
megatable = tibble::tibble(
Taxon = c("Amphibian", "Bird", "Fish", "", "Mammal", "", "Plant", "Reptile (Squamate)", "Shark, Ray, and Chimaera"),
`# of species` = c(format(ape::Ntip(megatrees::tree_amphibian_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_bird_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_12k), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_32k_n50[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_phylacine[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_vertlife[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_plant_otl), big.mark = ","),
format(ape::Ntip(megatrees::tree_reptile_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_shark_ray_n100[[1]]), big.mark = ",")),
`# of trees` = c(100, 100, 1, 50, 100, 100, 1, 100, 100),
`R object` = c("`tree_amphibian_n100`", "`tree_bird_n100`", "`tree_fish_12k`",
"`tree_fish_32k_n50`", "`tree_mammal_n100_phylacine`", "`tree_mammal_n100_vertlife`",
"`tree_plant_otl`", "`tree_reptile_n100`", "`tree_shark_ray_n100`"),
Reference = c("Jetz and Pyron 2018", "Jetz et al. 2012", "Rabosky et al. 2018",
"Rabosky et al. 2018", "Faurby et al. 2018", "Upham et al. 2019",
"Brown and Smith 2018", "Tonini et al. 2016", "Stein et al. 2018")
)
knitr::kable(megatable, booktab = T)
rmarkdown::pandoc_exec()
usethis::edit_r_environ()
rmarkdown::pandoc_available()
rmarkdown::pandoc_version()
Sys.getenv("RSTUDIO_PANDOC")
substr("a", 2, 3)
?stringr::str_wrap
x = matrix(c(1:3, NA, 5:7, NA, NA), nrow = 3)
x[is.na(x)] = 0
unzip("http://www.ecography.org/sites/ecography.org/files/appendix/ecog-04434.zip", list = T)
temp_file = tempfile()
temp_file
xfun::download_file("http://www.ecography.org/sites/ecography.org/files/appendix/ecog-04434.zip", temp_file)
unzip(temp_file, list = T)
unzip(temp_file, "ECOG-04434/Appendix_3-Example_species_list.csv")
example_sp_list = read.csv("ECOG-04434/Appendix_3-Example_species_list.csv")
example_sp_list
unlink(temp_file)
example_sp_list
names(example_sp_list)[4:5] = c("close_sp", "close_genus")
example_sp_list
rtrees::get_tree(sp_list = example_sp_list, taxon = "plant", show_grafted = TRUE)
example_tree = rtrees::get_tree(sp_list = example_sp_list, taxon = "plant", show_grafted = TRUE)
plot(example_tree, type = "fan")
names(example_sp_list)
example_sp_list$close_sp
example_sp_list$close_sp = gsub(" ", "_", example_sp_list$close_sp)
example_tree = rtrees::get_tree(sp_list = example_sp_list, taxon = "plant", show_grafted = TRUE)
plot(example_tree, type = "fan")
install.packages("rtrees")
install.packages("rtrees")
options(repos = c(
daijiang = 'https://daijiang.r-universe.dev',
CRAN = 'https://cloud.r-project.org'))
install.packages('rtrees')
rtrees::get_one_tree
# create a species list
species <- c("Meliosma laui", "Acer cordatum", "Fraxinus mandshurica",
"Ormosia pinnata", "Aglaia dasyclada", "Sphagnum_subnitens",
"Stephanomeria_cichoriacea", "Taraxacum_schroeterianum",
"Humiria_balsamifera", "Salix_cinerea", "Floerkea_proserpinacoides")
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant", show_grafted = TRUE)
sp_tree$graft_status
more_sp_to_add = c("Ormosia sp.", "Fraxinus americana")
sp_tree_2 = rtrees::get_tree(sp_list = more_sp_to_add, tree = sp_tree, tree_by_user = TRUE)
sp_tree_2
new_species = c(species, more_sp_to_add)
sp_tree_2 = rtrees::get_tree(sp_list = new_species, tree = sp_tree, tree_by_user = TRUE)
# get a phylogeny
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant", show_grafted = TRUE)
sp_tree_2 = rtrees::get_tree(sp_list = new_species, tree = sp_tree, tree_by_user = TRUE)
sp_tree
new_species
sp_tree_2 = rtrees::get_tree(sp_list = new_species, tree = sp_tree, tree_by_user = TRUE)
more_sp_to_add = c("Ormosia_sp.", "Fraxinus_americana")
new_species = c(species, more_sp_to_add)
sp_tree_2 = rtrees::get_tree(sp_list = new_species, tree = sp_tree, tree_by_user = TRUE)
new_species
sp_tree$tip.label
more_sp_to_add = c("Ormosia_sp.", "Fraxinus_americana")
new_species = c(species, more_sp_to_add)
sp_tree_2 = rtrees::get_tree(sp_list = new_species, tree = sp_tree, tree_by_user = TRUE)
sp_tree_2 = rtrees::get_tree(sp_list = new_species, tree = sp_tree, taxon = "plant", tree_by_user = TRUE)
dat <- read.csv(file = "Appendix_3-Example_species_list.csv")
dat <- read.csv(file = "Doc/Appendix_3-Example_species_list.csv")
dat
sp_tree_5 <- rtrees::get_tree(sp_list = dat, taxon = "plant")
sp_tree_5 <- rtrees::get_tree(sp_list = dat, taxon = "plant", show_grafted = TRUE)
plot(sp_tree_5, type = "fan")
library(ggtree)
suppressPackageStartupMessages(library(ggtree))
ggtree(sp_tree_5, layout = "circular")
ggtree(sp_tree_5, layout = "circular") +
geom_tiplab2()
ggtree(sp_tree_5, layout = "circular") +
geom_tiplab()
plot(sp_tree_5, type = "fan")
plot(sp_tree_5, type = "fan", label.offset = 1)
plot(sp_tree_5, type = "fan", label.offset = 5)
plot(sp_tree_5, type = "fan", label.offset = 3)
speed_out = readRDS("Data/rtrees_speed_out.rds")
speed_out = dplyr::mutate(speed_out, n_sp_missing_k = n_sp_missing / 1000, time_s = time/1e9)
speed_out
xfun::pkg_attach2(c("knitr", "fansi", "dplyr"))
speed_lm = dplyr::group_by(speed_out, expr) |>
broom::tidy(lm(time_s ~ n_sp_missing_k, data = .))
speed_lm = dplyr::group_by(speed_out, expr) |>
do(broom::tidy(lm(time_s ~ n_sp_missing_k, data = .)))
speed_lm
library(tidyverse)
d = read_delim("Data/plants_phylomatic_names.txt", "/", col_names = F) %>%
set_names(c("family", "genus", "species")) %>%
mutate(genus = str_extract(genus, "^[^_]+"),
species = rtrees:::cap_first_letter(species),
genus = rtrees:::cap_first_letter(genus),
family = rtrees:::cap_first_letter(family)) %>%
select(species) %>% distinct()
n_distinct(d$species)
sp_missing = setdiff(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
sp_missing = setdiff(d$species, megatrees::tree_plant_otl$tip.label)
sp_in = intersect(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
# I cannot use V.PhyloMaker::phylo.maker() and was forced to library it,
#     which is a little bit annoying.
library(V.PhyloMaker)
d = read_delim("Data/plants_phylomatic_names.txt", "/", col_names = F) %>%
set_names(c("family", "genus", "species")) %>%
mutate(genus = str_extract(genus, "^[^_]+"),
species = rtrees:::cap_first_letter(species),
genus = rtrees:::cap_first_letter(genus),
family = rtrees:::cap_first_letter(family)) %>%
select(species) %>% distinct()
n_distinct(d$species)
options(repos = c(
rtrees = 'https://daijiang.r-universe.dev',
CRAN = 'https://cloud.r-project.org')
)
xfun::pkg_attach2(c("rtrees", "phylocomr", "microbenchmark"))
taxa_fish = read_csv("Data/taxa_fish.csv") %>%
mutate(species = rtrees:::cap_first_letter(taxa_fish),
species = stringr::str_trim(species)) %>%
select(-taxa_fish) %>%
distinct()
taxa_fish
taxa_fish = rtrees::sp_list_df(taxa_fish, "fish")
taxa_fish = drop_na(taxa_fish, family)
taxa_fish
sp_missing = setdiff(taxa_fish$species, megatrees::tree_fish_12k$tip.label)
sp_in = intersect(taxa_fish$species, megatrees::tree_fish_12k$tip.label)
test_sp = unique(c(sample(sp_in, 50), sample(sp_missing, 1500)))
test_sp
test_sp = unique(c(sample(sp_in, 50), sample(sp_missing, 1000)))
test_sp_df = rtrees::sp_list_df(sp_list = test_sp, taxon = "fish")
test_sp_df = filter(test_sp_df, !is.na(family))
test_sp_df
# Chunk 1: knitr_options
xfun::pkg_attach2(c("knitr", "dplyr"))
# rstudio will set the folder where .Rmd file seats as work directory
# set it back to the folder where .Rproj seats
opts_knit$set(root.dir = normalizePath("../"))
opts_chunk$set(fig.align = 'center', cache = FALSE, warning = FALSE,
message = TRUE, echo = FALSE, fig.pos = "H", out.extra = "")
options(digits = 3, width = 88,
# use pdf file automatically when compile to pdf
knitr.graphics.auto_pdf = TRUE,
knitr.kable.NA = '',
crayon.enabled = knitr::is_html_output())
# download template files if not available
tpl_1 = 'https://raw.githubusercontent.com/dlilab/manuscript_template/master/Doc/template/preamble.tex'
tpl_2 = 'https://raw.githubusercontent.com/dlilab/manuscript_template/master/Doc/template/doc_prefix.tex'
tpl_3 = 'https://raw.githubusercontent.com/dlilab/manuscript_template/master/Doc/template/nature_style.docx'
# bib_1 = 'https://raw.githubusercontent.com/dlilab/manuscript_template/master/template/ref.bib'
# change directory accordingly
if(!file.exists(tpl_1f <- 'template/preamble.tex')) download.file(tpl_1, tpl_1f)
if(!file.exists(tpl_2f <- 'template/doc_prefix.tex')) download.file(tpl_2, tpl_2f)
if(!file.exists(tpl_3f <- 'template/nature_style.docx')) download.file(tpl_3, tpl_3f)
if(knitr::is_latex_output() | knitr::is_html_output()){
library(kableExtra)
} else {
options(kableExtra.auto_format = FALSE) # for docx
}
library(rtrees)
# Chunk 2
n_genus = sapply(rtrees::taxa_supported, function(x){
dplyr::n_distinct(dplyr::filter(rtrees::classifications, taxon == x)$genus)
})
# Chunk 3: megaTable
megatable = tibble::tibble(
Taxon = c("Amphibian", "Bird", "Fish", "", "Mammal", "", "Plant", "Reptile (Squamate)", "Shark, Ray, and Chimaera"),
`# of species` = c(format(ape::Ntip(megatrees::tree_amphibian_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_bird_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_12k), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_32k_n50[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_phylacine[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_vertlife[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_plant_otl), big.mark = ","),
format(ape::Ntip(megatrees::tree_reptile_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_shark_ray_n100[[1]]), big.mark = ",")),
`# of trees` = c(100, 100, 1, 50, 100, 100, 1, 100, 100),
`R object` = c("tree_amphibian_n100", "tree_bird_n100", "tree_fish_12k",
"tree_fish_32k_n50", "tree_mammal_n100_phylacine", "tree_mammal_n100_vertlife",
"tree_plant_otl", "tree_reptile_n100", "tree_shark_ray_n100"),
Reference = c("Jetz and Pyron 2018", "Jetz et al. 2012", "Rabosky et al. 2018",
"Rabosky et al. 2018", "Faurby et al. 2018", "Upham et al. 2019",
"Smith and Brown 2018", "Tonini et al. 2016", "Stein et al. 2018")
)
knitr::kable(megatable,  booktabs = T, caption = "(ref:megaTable)") |>
kableExtra::kable_styling(bootstrap_options = c("striped", "scale_down", "condensed", "hover"),
latex_options = c("striped", "scale_down", "condensed"))
# create a species list
species <- c('Meliosma laui', 'Acer cordatum', 'Fraxinus mandshurica',
'Ormosia pinnata', 'Aglaia dasyclada', 'Sphagnum_subnitens',
'Stephanomeria_cichoriacea', 'Taraxacum_schroeterianum',
'Humiria_balsamifera', 'Salix_cinerea', 'Floerkea_proserpinacoides')
# get a phylogeny
sp_tree <- rtrees::get_tree(sp_list = species, taxon = 'plant')
# or use rtrees::get_graft_status()
sp_tree$graft_status
more_sp_to_add = c('Ormosia_sp.', 'Fraxinus_americana')
new_species = c(species, more_sp_to_add)
sp_tree_2 = rtrees::get_tree(sp_list = new_species, tree = sp_tree,
taxon = 'plant', tree_by_user = TRUE)
