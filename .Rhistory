rmarkdown::render("Doc/respond_to_reviewer.Rmd")
library(tidyverse)
d = read_csv("~/Downloads/ECOG-04434/Appendix_3-Example_species_list.csv")$genus
d = read_csv("~/Downloads/ECOG-04434/Appendix_3-Example_species_list.csv")[, 1:3]
d
microbenchmark::microbenchmark(
t_vphylo <- V.PhyloMaker2::phylo.maker(sp.list = d)
t_rtrees <- rtrees::get_tree(sp_list = d, taxon = "plant"),
times = 10
)
microbenchmark::microbenchmark(
t_vphylo <- V.PhyloMaker2::phylo.maker(sp.list = d),
t_rtrees <- rtrees::get_tree(sp_list = d, taxon = "plant"),
times = 10
)
library(V.PhyloMaker2)
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = d),
t_rtrees <- rtrees::get_tree(sp_list = d, taxon = "plant"),
times = 10
)
t_vphylo
par(mfrow = c(1,2))
plot(ape::ladderize(t_vphylo))
plot(ape::ladderize(t_vphylo$scenario.3))
plot(ape::ladderize(t_rtrees))
d = read_csv("~/Downloads/ECOG-04434/Appendix_3-Example_species_list.csv")
t_vphylo <- phylo.maker(sp.list = d)
d2 = set_names(d, c("species", "genus", "family", "close_sp", "close_genus"))
t_rtrees <- rtrees::get_tree(sp_list = d2, taxon = "plant")
plot(ape::ladderize(t_vphylo$scenario.3))
plot(ape::ladderize(t_rtrees))
View(d)
t_rtrees <- rtrees::get_tree(sp_list = d2, taxon = "plant", show_grafted = T)
plot(ape::ladderize(t_vphylo$scenario.3))
plot(ape::ladderize(t_rtrees))
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/")
d
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/", col_names = F)
d
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/", col_names = F) %>%
set_names(c("family", "genus", "species")) %>%
mutate(genus = str_extract(genus, "^[^_]+")) %>%
select(species, genus, family)
d
n_distinct(d$species)
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/", col_names = F) %>%
set_names(c("family", "genus", "species")) %>%
mutate(genus = str_extract(genus, "^[^_]+")) %>%
select(species, genus, family) %>% distinct()
n_distinct(d$species)
d
sp_missing = setdiff(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
V.PhyloMaker2::GBOTB.extended.TPL$tip.label
d$species
sp_missing = setdiff(d$species, megatrees::tree_plant_otl$tip.label)
sp_missing
d
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/", col_names = F) %>%
set_names(c("family", "genus", "species")) %>%
mutate(genus = str_extract(genus, "^[^_]+"),
species = rtrees:::cap_first_letter(species)) %>%
select(species, genus, family) %>% distinct()
n_distinct(d$species)
sp_missing = setdiff(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
sp_missing = setdiff(d$species, megatrees::tree_plant_otl$tip.label)
sp_missing = setdiff(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
sp_missing = setdiff(d$species, megatrees::tree_plant_otl$tip.label)
sp_in = intersect(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 500))
test_sp_df = filter(d, species %in% test_sp)
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = test_sp_df),
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"),
times = 2
)
t_rtrees
t_vphylo
test_sp_df
test_sp_df = filter(d, species %in% sp_missing)
test_sp_df
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/", col_names = F) %>%
set_names(c("family", "genus", "species")) %>%
mutate(genus = str_extract(genus, "^[^_]+"),
species = rtrees:::cap_first_letter(species),
genus = rtrees:::cap_first_letter(genus),
family = rtrees:::cap_first_letter(family)) %>%
select(species, genus, family) %>% distinct()
n_distinct(d$species)
sp_missing = setdiff(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
sp_missing = setdiff(d$species, megatrees::tree_plant_otl$tip.label)
sp_in = intersect(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 500))
test_sp_df = filter(d, species %in% test_sp)
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = test_sp_df),
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"),
times = 2
)
V.PhyloMaker2::tips.info.TPL
head(V.PhyloMaker2::tips.info.TPL)
c_vphylo = unique(select(V.PhyloMaker2::tips.info.TPL, genus, family))
c_vphylo
c_vphylo = as_tibble(unique(select(V.PhyloMaker2::tips.info.TPL, genus, family)))
c_vphylo
filter(rtrees::classifications, taxon == "plant")
table(V.PhyloMaker2::tips.info.TPL$group)
c_rtrees = filter(rtrees::classifications, taxon == "plant")
filter(rtrees::classifications, taxon == "plant")
d = read_delim("/Users/dli/Library/CloudStorage/Box-Box/00_papers_dli/2020_ProcB_phyl.homog/data_sets_clean/phylogenies/plants_phylomatic_names.txt", "/", col_names = F) %>%
set_names(c("family", "genus", "species")) %>%
mutate(genus = str_extract(genus, "^[^_]+"),
species = rtrees:::cap_first_letter(species),
genus = rtrees:::cap_first_letter(genus),
family = rtrees:::cap_first_letter(family)) %>%
select(species) %>% distinct()
n_distinct(d$species)
sp_missing = setdiff(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
sp_missing = setdiff(d$species, megatrees::tree_plant_otl$tip.label)
sp_in = intersect(d$species, V.PhyloMaker2::GBOTB.extended.TPL$tip.label)
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 500))
test_sp_df = rtrees::sp_list_df(sp_list = test_sp, taxon = "plant")
test_sp_df
View(test_sp_df)
test_sp_df = filter(test_sp_df, !is.na(family))
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant")
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = test_sp_df),
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"),
times = 2
)
remotes::install_github("daijiang/rtrees")
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 1000))
test_sp_df = rtrees::sp_list_df(sp_list = test_sp, taxon = "plant")
test_sp_df = filter(test_sp_df, !is.na(family))
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = test_sp_df),
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"),
times = 2
)
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 2000))
test_sp_df = rtrees::sp_list_df(sp_list = test_sp, taxon = "plant")
test_sp_df = filter(test_sp_df, !is.na(family))
test_sp
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = test_sp_df),
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"),
times = 2
)
profvis::profvis(t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"))
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 3000))
test_sp_df = rtrees::sp_list_df(sp_list = test_sp, taxon = "plant")
test_sp_df = filter(test_sp_df, !is.na(family))
microbenchmark::microbenchmark(
t_vphylo <- phylo.maker(sp.list = test_sp_df),
t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"),
times = 2
)
test_sp = c(sample(sp_in, 1000), sample(sp_missing, 500))
test_sp_df = rtrees::sp_list_df(sp_list = test_sp, taxon = "plant")
test_sp_df = filter(test_sp_df, !is.na(family))
profvis::profvis(t_rtrees <- rtrees::get_tree(sp_list = test_sp_df, taxon = "plant"))
rtrees::get_one_tree
devtools::install_github("crsh/citr")
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
library(rtrees)
rtrees::taxa_supported
sapply(rtrees::taxa_supported, function(x){
dplyr::n_distinct(dplyr::filter(rtrees::classifications, taxon == x)$genus)
})
n_genus = sapply(rtrees::taxa_supported, function(x){
dplyr::n_distinct(dplyr::filter(rtrees::classifications, taxon == x)$genus)
})
n_genus
as.data.frame(n_genus)
t(as.data.frame(n_genus))
n_genus = t(as.data.frame(n_genus))
str(n_genus)
n_genus = sapply(rtrees::taxa_supported, function(x){
dplyr::n_distinct(dplyr::filter(rtrees::classifications, taxon == x)$genus)
})
n_genus
packageVersion("rtrees")
paste0('v', packageVersion("rtrees"))
n_genus["plant"]
format(n_genus["plant"], big.mark = ",")
paste0('v', packageVersion("rtrees"))
format(n_genus["plant"], big.mark = ",")
format(n_genus["bird"], big.mark = ",")
format(n_genus["fish"], big.mark = ",")
format(n_genus["mammal"], big.mark = ",")
format(n_genus["amphibian"], big.mark = ",")
format(n_genus["reptile"], big.mark = ",")
format(n_genus["shark_ray"], big.mark = ",")
n_genus
sort(n_genus)
ape::Ntip(tree_amphibian_n100)
library(rtrees)
ape::Ntip(tree_amphibian_n100)
ape::Ntip(megatrees::tree_amphibian_n100)
ape::Ntip(megatrees::tree_amphibian_n100[[1]])
format(ape::Ntip(megatrees::tree_amphibian_n100[[1]]), big.mark = ",")
data.frame(
Taxon = c("Amphibian", "Bird", "Fish", "", "Mammal", "", "Plant", "Reptile (Squamate)", "Shark, Ray, and Chimaera"),
`# of species` = c(format(ape::Ntip(megatrees::tree_amphibian_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_bird_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_12k), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_32k_n50[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_phylacine[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_vertlife[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_plant_otl), big.mark = ","),
format(ape::Ntip(megatrees::tree_reptile_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_shark_ray_n100[[1]]), big.mark = ","))
)
tibble::tibble(
Taxon = c("Amphibian", "Bird", "Fish", "", "Mammal", "", "Plant", "Reptile (Squamate)", "Shark, Ray, and Chimaera"),
`# of species` = c(format(ape::Ntip(megatrees::tree_amphibian_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_bird_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_12k), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_32k_n50[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_phylacine[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_vertlife[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_plant_otl), big.mark = ","),
format(ape::Ntip(megatrees::tree_reptile_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_shark_ray_n100[[1]]), big.mark = ","))
)
megatable = tibble::tibble(
Taxon = c("Amphibian", "Bird", "Fish", "", "Mammal", "", "Plant", "Reptile (Squamate)", "Shark, Ray, and Chimaera"),
`# of species` = c(format(ape::Ntip(megatrees::tree_amphibian_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_bird_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_12k), big.mark = ","),
format(ape::Ntip(megatrees::tree_fish_32k_n50[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_phylacine[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_mammal_n100_vertlife[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_plant_otl), big.mark = ","),
format(ape::Ntip(megatrees::tree_reptile_n100[[1]]), big.mark = ","),
format(ape::Ntip(megatrees::tree_shark_ray_n100[[1]]), big.mark = ",")),
`# of trees` = c(100, 100, 1, 50, 100, 100, 1, 100, 100),
`R object` = c("`tree_amphibian_n100`", "`tree_bird_n100`", "`tree_fish_12k`",
"`tree_fish_32k_n50`", "`tree_mammal_n100_phylacine`", "`tree_mammal_n100_vertlife`",
"`tree_plant_otl`", "`tree_reptile_n100`", "`tree_shark_ray_n100`"),
Reference = c("Jetz and Pyron 2018", "Jetz et al. 2012", "Rabosky et al. 2018",
"Rabosky et al. 2018", "Faurby et al. 2018", "Upham et al. 2019",
"Brown and Smith 2018", "Tonini et al. 2016", "Stein et al. 2018")
)
knitr::kable(megatable, booktab = T)
rmarkdown::pandoc_exec()
usethis::edit_r_environ()
rmarkdown::pandoc_available()
rmarkdown::pandoc_version()
Sys.getenv("RSTUDIO_PANDOC")
substr("a", 2, 3)
?stringr::str_wrap
x = matrix(c(1:3, NA, 5:7, NA, NA), nrow = 3)
x[is.na(x)] = 0
# create a species list
species = c("Meliosma_laui", "Acer_cordatum", "Fraxinus_mandshurica",
"Ormosia_pinnata", "Aglaia_dasyclada", "Claoxylon_indicum")
# create a species list
species = c("Meliosma laui", "Acer cordatum", "Fraxinus mandshurica",
"Ormosia pinnata", "Aglaia dasyclada", "Claoxylon indicum")
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant")
sp_tree
# create a species list
species <- c("Meliosma laui", "Acer cordatum", "Fraxinus mandshurica",
"Ormosia pinnata", "Aglaia dasyclada", "Claoxylon indicum",
"Stephanomeria_cichoriacea", "Taraxacum_schroeterianum",
"Humiria_balsamifera", "Salix_cinerea")
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant")
sp_tree
args(rtrees::get_tree)
sp_tree
rtrees::taxa_supported
remotes::install_github("daijiang/rtrees")
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant")
rtrees::get_tree
rtrees::get_one_tree
# create a species list
species <- c("Meliosma laui", "Acer cordatum", "Fraxinus mandshurica",
"Ormosia pinnata", "Aglaia dasyclada", "Claoxylon indicum",
"Stephanomeria_cichoriacea", "Taraxacum_schroeterianum",
"Humiria_balsamifera", "Salix_cinerea", "Floerkea_proserpinacoides")
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant")
# create a species list
species <- c("Meliosma laui", "Acer cordatum", "Fraxinus mandshurica",
"Ormosia pinnata", "Aglaia dasyclada", "Sphagnum_subnitens",
"Stephanomeria_cichoriacea", "Taraxacum_schroeterianum",
"Humiria_balsamifera", "Salix_cinerea", "Floerkea_proserpinacoides")
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant")
remotes::install_github("daijiang/rtrees")
remotes::install_github("daijiang/rtrees", force = T)
rtrees::get_one_tree
rtrees::get_one_tree
# create a species list
species <- c("Meliosma laui", "Acer cordatum", "Fraxinus mandshurica",
"Ormosia pinnata", "Aglaia dasyclada", "Sphagnum_subnitens",
"Stephanomeria_cichoriacea", "Taraxacum_schroeterianum",
"Humiria_balsamifera", "Salix_cinerea", "Floerkea_proserpinacoides")
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant")
sp_tree$graft_status
sp_tree
sp_tree$tip.label
remotes::install_github("daijiang/rtrees")
# create a species list
species <- c("Meliosma laui", "Acer cordatum", "Fraxinus mandshurica",
"Ormosia pinnata", "Aglaia dasyclada", "Sphagnum_subnitens",
"Stephanomeria_cichoriacea", "Taraxacum_schroeterianum",
"Humiria_balsamifera", "Salix_cinerea", "Floerkea_proserpinacoides")
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant")
sp_tree$graft_status
# create a species list
species <- c("Meliosma laui", "Acer cordatum", "Fraxinus mandshurica",
"Ormosia pinnata", "Aglaia dasyclada", "Sphagnum_subnitens",
"Stephanomeria_cichoriacea", "Taraxacum_schroeterianum",
"Humiria_balsamifera", "Salix_cinerea", "Floerkea_proserpinacoides")
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant")
sp_tree$graft_status
rtrees::get_one_tree
remotes::install_github("daijiang/rtrees")
rtrees::get_one_tree
# create a species list
species <- c("Meliosma laui", "Acer cordatum", "Fraxinus mandshurica",
"Ormosia pinnata", "Aglaia dasyclada", "Sphagnum_subnitens",
"Stephanomeria_cichoriacea", "Taraxacum_schroeterianum",
"Humiria_balsamifera", "Salix_cinerea", "Floerkea_proserpinacoides")
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant")
sp_tree$graft_status
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant", show_grafted = TRUE)
sp_tree$graft_status
species <- c("Meliosma laui", "Acer cordatum", "Fraxinus mandshurica",
"Ormosia pinnata", "Aglaia dasyclada", "Sphagnum_subnitens",
"Stephanomeria_cichoriacea", "Taraxacum_schroeterianum",
"Humiria_balsamifera", "Salix_cinerea", "Floerkea_proserpinacoides")
gsub(pattern = "^[A-Za-z]*(ph).*$", replacement = "\\1", x = species)
species
v = c("A1_PWA20", "B1_C120B14", "C1_C120A20", "D1_C120B20", "E1_DBA20", "F1_PWA14", "G1_C15A14", "H1_PWB14", "A2_C15B14", "B2_DBA14", "C2_DBB14", "D2_C15A20", "E2_C15B20")
grepl(pattern = "14$", x = v)
v2 = v
v2[grepl(pattern = "14$", x = v)] = "low temp"
v2
v2[grepl(pattern = "20$", x = v)] = "high temp"
v2
# create a species list
species <- c("Meliosma laui", "Acer cordatum", "Fraxinus mandshurica",
"Ormosia pinnata", "Aglaia dasyclada", "Sphagnum_subnitens",
"Stephanomeria_cichoriacea", "Taraxacum_schroeterianum",
"Humiria_balsamifera", "Salix_cinerea", "Floerkea_proserpinacoides")
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant", show_grafted = TRUE)
more_sp_to_add = c("Ormosia_sp.", "Fraxinus_americana")
new_species = c(species, more_sp_to_add)
sp_tree_2 = rtrees::get_tree(sp_list = new_species, tree = sp_tree, taxon = "plant", tree_by_user = TRUE)
# create a species list
species <- c("Meliosma laui", "Acer cordatum", "Fraxinus mandshurica",
"Ormosia pinnata", "Aglaia dasyclada", "Sphagnum_subnitens",
"Stephanomeria_cichoriacea", "Taraxacum_schroeterianum",
"Humiria_balsamifera", "Salix_cinerea", "Floerkea_proserpinacoides")
# get a phylogeny
sp_tree <- rtrees::get_tree(sp_list = species, taxon = "plant", show_grafted = TRUE)
more_sp_to_add = c("Ormosia_sp.", "Fraxinus_americana")
new_species = c(species, more_sp_to_add)
sp_tree_2 = rtrees::get_tree(sp_list = new_species, tree = sp_tree, taxon = "plant", tree_by_user = TRUE)
more_sp_to_add = c("Ormosia_sp.", "Fraxinus_americana")
new_species = c(species, more_sp_to_add)
sp_tree_2 = rtrees::get_tree(sp_list = new_species, tree = sp_tree, taxon = "plant", tree_by_user = TRUE)
setdiff(new_species, "Sphagnum_subnitens")
new_species_all_in = setdiff(new_species, "Sphagnum_subnitens")
sp_tree_3 = rtrees::get_tree(sp_list = new_species_all_in, tree = sp_tree, tree_by_user = TRUE)
sp_tree_3
# bird species
bird_species =  c("Brachypteryx_major", "Asthenes_perijana", "Ciridops_anna",
"Leiothlypis_ruficapilla", "Reinwardtoena_reinwardti",
"Garrulax_caerulatus", "Buteo_rufofuscus", "Sylvia_mystacea",
"Telophorus_viridis", "Trachyphonus_darnaudii")
sp_tree_4 = rtrees::get_tree(sp_list = bird_species, taxon = "bird")
sp_tree_4
sp_tree_4[[1]]
speed_out = readRDS("Data/rtrees_speed_out.rds")
speed_out = dplyr::mutate(speed_out, n_sp_missing_k = n_sp_missing / 1000, time_s = time/1e9)
speed_out
speed_out = readRDS("Data/rtrees_speed_out.rds")
speed_out = dplyr::mutate(speed_out, n_sp_missing_k = n_sp_missing / 1000, time_s = time/1e9)
speed_out
table(speed_out$expr)
speed_out = readRDS("Data/rtrees_speed_out.rds")
speed_out = dplyr::mutate(speed_out, n_sp_missing_k = n_sp_missing / 1000, time_s = time/1e9)
speed_out
library(ggplot2)
ggplot(speed_out, aes(x = n_sp_missing, y = time_s, color = expr, group = expr)) +
geom_point() +
geom_smooth() +
labs(x = "Number of binding species",
y = "Time (Second)", color = NULL, group = NULL) +
scale_x_continuous(breaks = c(50, seq(500, 5000, 500))) +
scale_y_continuous(breaks = c(0, 5, 10, seq(25, 200, 25))) +
cowplot::theme_cowplot() +
theme(legend.position = c(0.1, 0.9))
ggplot(speed_out, aes(x = n_sp_missing, y = time_s, color = expr, group = expr)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Number of binding species",
y = "Time (Second)", color = NULL, group = NULL) +
scale_x_continuous(breaks = c(50, seq(500, 5000, 500))) +
scale_y_continuous(breaks = c(0, 5, 10, seq(25, 200, 25))) +
cowplot::theme_cowplot() +
theme(legend.position = c(0.1, 0.9))
library(tidyverse)
library(dplyr)
group_by(speed_out, expr, n_sp_missing) %>% summarise(a = mean(time_s))
group_by(speed_out, expr, n_sp_missing) %>% summarise(a = mean(time_s)) %>% arrange(n_sp_missing)
group_by(speed_out, expr, n_sp_missing) %>% summarise(a = mean(time_s)) %>% arrange(n_sp_missing) %>% tail()
remotes::install_github("daijiang/rtrees")
